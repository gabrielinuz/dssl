# Geany's snippets configuration file
#
# use \n or %newline% for a new line (it will be replaced by the used EOL char(s) - LF, CR/LF, CR).
# use \t or %ws% for an indentation step, it will be replaced according to the current document's indent mode. If using only spaces for indentation only spaces will be used.
# use \s to force whitespace at beginning or end of a value ('key= value' won't work, use 'key=\svalue').
# use %key% for all keys defined in the [Special] section.
# use %cursor% to define where the cursor should be placed after completion. You can define multiple
#     %cursor% wildcards and use the "Move cursor in snippet" to jump to the next defined cursor
#     position in the completed snippet.
# You can define a section for each supported filetype to overwrite default settings, the section
# name must match exactly the internal filetype name, run 'geany --ft-names' for a full list.
#
# Additionally, you can use most of the template wildcards like {developer}, {command:...},
# or {date} in the snippets.
# See the documentation for details.

# For a list of available filetype names, execute:
# geany --ft-names

# Default is used for all filetypes and keys can be overwritten by [filetype] sections
[Default]
if=if (%cursor%)%brace_open%\n%brace_close%
else=else%brace_open%%cursor%\n%brace_close%
for=for (i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%brace_open%\n%brace_close%
do=do%brace_open%%cursor%\n%brace_close% while ()
switch=switch (%cursor%)%brace_open%case : break;\n%ws%default: \n%brace_close%
try=try%block_cursor%catch ()%block%
# special keys to be used in other snippets, cannot be used "standalone"
# can be used by %key%, e.g. %brace_open%
# nesting of special keys is not supported (e.g. brace_open=\n{\n%brace_close% won't work)
# key "wordchars" is very special, it defines the word delimiting characters when looking for
# a word to auto complete, leave commented to use the default wordchars
[Special]
brace_open=\n{\n\t
brace_close=}\n
block=\n{\n\t%cursor%\n}
block_cursor=\n{\n\t%cursor%\n}
#wordchars=_abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
##agrego esto para Python:
wordchars=._abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789

# Optional keybindings to insert snippets
# Note: these can be overridden by Geany's configurable keybindings
[Keybindings]
#for=<Ctrl>7

[sh]
# Bash 4.x by Fitorec
if=if [ %cursor% ]\nthen\n\t#condition is true\nelse\n\t#condition is false\nfi
case=case "%cursor%" in\n\t-option1)\n\t\t#option1\n\t\t;;\n\t-optionN)\n\t\t#optionN\n\t\t;;\nesac
for=for VARIABLE in 1 2 3 4 5 .. N\ndo\n\techo $VARIABLE\ndone
function=# --------------------------------------------------------- #\n# description\n#\n# @param     : $1 description for param 1\n# @return    :\n# @author    : {developer} <{mail}>\n# @link      : http://gnu.org\n# --------------------------------------------------------- #\nfunction %cursor%() {\n	\n}
select=select selection in option1 option2; do\n    if [ $selection ]; then\n		#selection valid in the options\n		break;\n    else\n		#selection invalid\n    fi\ndone\nbreak;

[C]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%

##C++ DSSL CONFIG
[C++]
main=#include <iostream>\n\nint main(int argc, char *argv[])\n{\n\t%cursor%\n\treturn 0;\n}\n
cout=cout << %cursor% << endl;
if=if(%cursor%) {\n\t%cursor%\n}
else=else {\n\t%cursor%\n}
for=for(%cursor%) {\n\t%cursor%\n}
while=while(%cursor%) {\n\t%cursor%\n}
do=do {\n\t%cursor%\n} while(%cursor%)
switch=switch(%cursor%) {\n\tcase %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n}
case=case %cursor%: \n\t%cursor%\n\tbreak;
try=try {\n\t%cursor%\n} catch(%cursor%) {\n\t%cursor%\n}
void=void %cursor%() {\n\t%cursor%\n}
#class=class %cursor% {\n\t%cursor%\n}
class=class %cursor% \n{\n\tpublic:\n\t\t%cursor%();\n\t\t~%cursor%();\n\tprivate:\n\t\t%cursor% _%cursor%;\n}
struct=struct %cursor% \n{\n\t%cursor%\n};

[Java]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (int i = 0; i < %cursor%; i++)%brace_open%\n%brace_close%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

[PHP]
# Little php snippets written by Atanas Beloborodov <nasko@cod3r.org>
# Some php5 object`s usefull snippets
class=class %cursor% \n{\n\tpublic function __construct()\n\t{\t\n\n\t}\n\n\tpublic function __destruct()\n\t{\t\n\n\t}\n}
interface=interface %cursor% %block%
static=public static function %cursor%() %block%
public=public function %cursor%()%block%
protected=protected function %cursor%()%block%
private=private function %cursor%()%block%
#Control structures :
for=for ($i = 0; $i < %cursor%; $i++) %block%
while=while (%cursor%) %block%
if=if (%cursor%) %block%
switch=switch (%cursor%) {\n\tcase '':\n\n\tbreak;\n\n\tdefault :\n\n\tbreak;\n}\n
else=if (%cursor%) %block%else %block%
elseif=if (%cursor%) {\n\t\n}\nelseif () {\n\t\n}\nelse {\n\t\n}\n
do=do %block%while (%cursor%);
foreach=foreach (%cursor%) %block%
try=try {\n\t//try code\n} catch (Exception $e) {\n\techo 'Error: ' . $e->getMessage() . "\\n";\n}
# Include methods
# Note : require and include is not functions ! Not required braces ()
req=require "%cursor%";
reqo=require_once "%cursor%";
inc=include "%cursor%";
inco=include_once "%cursor%";
# Others :
function=/**\n * Descripci칩n de la funci칩n\n *\n * @param tipo $parametro1 descripci칩n del p치rametro 1.\n * @return tipo descripcion de lo que regresa\n * @access publico/privado\n * @link [URL de mayor infor]\n */\nfunction %cursor%() {\n	\n}//end function
def=define ('%cursor%','');
throw=throw new Exception ('%cursor%');e%


[Javascript]
if=if(%cursor%) {\n\t%cursor%\n}
else=else {\n\t%cursor%\n}
for=for(%cursor%) {\n\t%cursor%\n}
while=while(%cursor%) {\n\t%cursor%\n}
do=do {\n\t%cursor%\n} while(%cursor%)
switch=switch(%cursor%) {\n\tcase %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n}
case=case %cursor%: \n\t%cursor%\n\tbreak;
try=try {\n\t%cursor%\n} catch(%cursor%) {\n\t%cursor%\n}
function=function %cursor%() {\n\t%cursor%\n}
class=class %cursor% {\n\t%cursor%\n}

[C#]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

[Vala]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

[ActionScript]
if=if (%cursor%)%block_cursor%
else=else%block_cursor%
for=for (i = 0; i < %cursor%; i++)%block_cursor%
while=while (%cursor%)%block_cursor%
do=do\n{\n\t%cursor%\n} while (%cursor%)\n
switch=switch (%cursor%)%brace_open%case %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n%brace_close%
try=try%block%\ncatch (%cursor%)%block_cursor%

#PROBANDO PARA PYTHON: https://wiki.geany.org/snippets/python/start
[Python]
utf8=#-*- coding: utf-8 -*-\n# vim:fileencoding=utf-8
for=for i in xrange(%cursor%):\n\t
doc=""" %cursor% """\n
elif=elif %cursor%:\n\t
else=else:\n\t%cursor%
if=if %cursor%:\n\t
from=from %cursor% import \n
main=if __name__ == '__main__':\n\t%cursor%
class=class %cursor%(object):\n\t""" Class doc """\n\t\n\tdef __init__ (self):\n\t\t""" Class initialiser """\n\t\tpass
def=def %cursor%(ARG: TYPE) -> TYPE:\n\t"""DOC"""\n\t
get=def get%cursor%(self): return self._var\n
set=def set%cursor%(self): self._var = var\n
try=try:\n\t%cursor%\nexcept Exception, e:\n\t
py=#!/usr/bin/env python3\n#-*- coding:utf-8 -*-\n# vim:fileencoding=utf-8\n
while=while %cursor%:\n\t
with=with %cursor%:\n\t
head="""\n\t%cursor%PROJECT - MODULE\n\n\tDESCRIPTION\n\n\t@copyright: {year} by {developer} <{mail}>\n\t@license: GNU GPL, see COPYING for details.\n"""\n
# Django models
# by Tomasz Karbownicki <tomasz@karbownicki.com>
mclass=class %cursor%(models.Model):\n\t'''%cursor%'''\n\n\tdef __unicode__(self):\n\t\treturn self.XXXXX\n\n\tdef get_absolute_url(self):\n\t\treturn "/XXXXX/%s/" % self.slug\n\n\tclass Meta:\n\t\tverbose_name = "%cursor%"\n\t\tverbose_name_plural = "%cursor%"
mchar=%cursor% = models.CharField(max_length=50, verbose_name=u'%cursor%')
mint=%cursor% = models.IntegerField(verbose_name=u'%cursor%')
mtext=%cursor% = models.TextField(verbose_name=u'%cursor%')
mkey=%cursor% = models.ForeignKey(%cursor%, verbose_name=u'%cursor%')
mimage=%cursor% = models.ImageField(upload_to='', verbose_name=u'%cursor%')
mbool=%cursor% = models.BooleanField(verbose_name=u'%cursor%')
mdate=%cursor% = models.DateField(verbose_name=u'%cursor%', help_text='Format daty: 2009-04-28')
memail=%cursor% = models.EmailField(verbose_name=u'%cursor%')
murl=%cursor% = models.URLField(verbose_name=u'%cursor%')
mslug=%cursor% = models.SlugField(verbose_name=u'%cursor%', unique=True)
# by Devyn Collier Johnson <DevynCJohnson@Gmail.com>
license=__license__ = """LGPLv3\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <http://www.gnu.org/licenses/>.\n"""
all=__all__ = [\n\t'FUNC',\n]
debug=print('HERE')  # DEBUG: Print

[Ferite]
iferr=iferr%block_cursor%fix%block%
monitor=monitor%block_cursor%handle%block%

[Haskell]

[HTML]
# HTML Template
html5=<!DOCTYPE html>\n<html lang="en">\n<head>\n\t<meta charset="UTF-8">\n\t<meta http-equiv="X-UA-Compatible" content="IE=edge">\n\t<meta name="viewport" content="width=device-width, initial-scale=1.0">\n\t<title>Document</title>\n</head>\n<body>\n\t%cursor%\n</body>\n</html>
# <a>
a=<a href="%cursor%">%cursor%</a>
a_link=<a href="http://%cursor%">%cursor%</a>
a_mail=<a href="mailto:%cursor%">%cursor%</a>
# <abbr>
abbr=<abbr title="%cursor%">%cursor%</abbr>
# <acronym>
acronym=<acronym title="%cursor%">%cursor%</acronym>
acr=<acronym title="%cursor%">%cursor%</acronym>
# <base>
base=<base href="%cursor%" />
# <basefont>
basefont=<basefont />
# <br>
br=<br />
# <frame>
frame=<frame />
# <hr>
hr=<hr />
# <link>
link=<link rel="stylesheet" href="%cursor%" />
link_css=<link rel="stylesheet" href="style.css" />
link_print=<link rel="stylesheet" href="print.css" media="print" />
link_favicon=<link rel="shortcut icon" type="image/x-icon" href="favicon.ico" />
link_touch=<link rel="apple-touch-icon" href="favicon.png" />
link_rss=<link rel="alternate" type="application/rss+xml" title="RSS" href="rss.xml" />
link_atom=<link rel="alternate" type="application/atom+xml" title="Atom" href="atom.xml" />
link_import=<link rel="import" href="component.html" />
link_imp=<link rel="import" href="component.html" />
# <meta>
meta=<meta />
meta_utf=<meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />
meta_win=<meta http-equiv="Content-Type" content="text/html;charset=windows-1251" />
meta_vp=<meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0" />
meta_compat=<meta http-equiv="X-UA-Compatible" content="IE=7" />
# <style>
style=<style>%cursor%</style>
# <script>
script=<script>%cursor%</script>
script_src=<script src="%cursor%">%cursor%</script>
# <img>
img=<img src="%cursor%" alt="%cursor%" />
img_srcset=<img srcset="%cursor%" src="%cursor%" alt="%cursor%" />
img_s=<img srcset="%cursor%" src="%cursor%" alt="%cursor%" />
ri_dpr=<img srcset="" src="" alt="" />
ri_d=<img srcset="" src="" alt="" />
img_sizes=<img sizes="%cursor%" srcset="%cursor%" src="%cursor%" alt="%cursor%" />
img_z=<img sizes="%cursor%" srcset="%cursor%" src="%cursor%" alt="%cursor%" />
ri_viewport=<img sizes="" srcset="" src="" alt="" />
ri_v=<img sizes="" srcset="" src="" alt="" />

# <picture>
picture=<picture>\n\t<source srcset="%cursor%" />\n\t<img src="%cursor%" alt="%cursor%" />\n</picture>
pic=<picture>%cursor%</picture>
ri_art=<picture>\n\t<source media="(min-width: )" srcset="" />\n\t<img src="" alt="" />\n</picture>
ri_a=<picture>\n\t<source media="(min-width: )" srcset="" />\n\t<img src="" alt="" />\n</picture>
ri_type=<picture>\n\t<source srcset="" type="image/" />\n\t<img src="" alt="" />\n</picture>
ri_t=<picture>\n\t<source srcset="" type="image/" />\n\t<img src="" alt="" />\n</picture>
# <source>
source=<source />
src=<source />
source_src=<source src="%cursor%" type="%cursor%" />
src_sc=<source src="%cursor%" type="%cursor%" />
source_srcset=<source srcset="%cursor%" />
src_s=<source srcset="%cursor%" />
source_media=<source media="(min-width: )" srcset="%cursor%" />
src_m=<source media="(min-width: )" srcset="%cursor%" />
source_type=<source srcset="%cursor%" type="image/" />
src_t=<source srcset="%cursor%" type="image/" />
source_sizes=<source sizes="%cursor%" srcset="%cursor%" />
src_z=<source sizes="%cursor%" srcset="%cursor%" />
source_media_type=<source media="(min-width: )" srcset="%cursor%" type="image/" />
src_mt=<source media="(min-width: )" srcset="%cursor%" type="image/" />
source_media_sizes=<source media="(min-width: )" sizes="%cursor%" srcset="%cursor%" />
src_mz=<source media="(min-width: )" sizes="%cursor%" srcset="%cursor%" />
source_sizes_type=<source sizes="%cursor%" srcset="%cursor%" type="image/" />
src_zt=<source sizes="%cursor%" srcset="%cursor%" type="image/" />
# <iframe>
iframe=<iframe src="%cursor%" frameborder="0">%cursor%</iframe>
ifr=<iframe src="%cursor%" frameborder="0">%cursor%</iframe>
# <embed>
embed=<embed src="%cursor%" type="%cursor%" />
emb=<embed src="%cursor%" type="%cursor%" />
# <object>
object=<object data="%cursor%" type="%cursor%">%cursor%</object>
obj=<object data="%cursor%" type="%cursor%">%cursor%</object>
# <param>
param=<param name="%cursor%" value="%cursor%" />
# <map>
map=<map name="%cursor%">\n\t<area shape="%cursor%" coords="%cursor%" href="%cursor%" alt="%cursor%" />\n</map>
# <area>
area=<area shape="%cursor%" coords="%cursor%" href="%cursor%" alt="%cursor%" />
area_d=<area shape="default" href="%cursor%" alt="%cursor%" />
area_c=<area shape="circle" coords="%cursor%" href="%cursor%" alt="%cursor%" />
area_r=<area shape="rect" coords="%cursor%" href="%cursor%" alt="%cursor%" />
area_p=<area shape="poly" coords="%cursor%" href="%cursor%" alt="%cursor%" />
# <form>
form=<form action="%cursor%">%cursor%</form>
form_get=<form action="%cursor%" method="get">%cursor%</form>
form_post=<form action="%cursor%" method="post">%cursor%</form>
# <label>
<label for="%cursor%">%cursor%</label>
# <input>
input=<input type="text" />
inp=<input type="text" name="%cursor%" id="%cursor%" />
input_hidden=<input type="hidden" name="%cursor%" />
input_h=<input type="hidden" name="%cursor%" />
input_text=<input type="text" name="%cursor%" id="%cursor%" />
input_t=<input type="text" name="%cursor%" id="%cursor%" />
input_search=<input type="search" name="%cursor%" id="%cursor%" />
input_email=<input type="email" name="%cursor%" id="%cursor%" />
input_url=<input type="url" name="%cursor%" id="%cursor%" />
input_password=<input type="password" name="%cursor%" id="%cursor%" />
input_p=<input type="password" name="%cursor%" id="%cursor%" />
input_datetime=<input type="datetime" name="%cursor%" id="%cursor%" />
input_date=<input type="date" name="%cursor%" id="%cursor%" />
input_datetime_local=<input type="datetime-local" name="%cursor%" id="%cursor%" />
input_month=<input type="month" name="%cursor%" id="%cursor%" />
input_week=<input type="week" name="%cursor%" id="%cursor%" />
input_time=<input type="time" name="%cursor%" id="%cursor%" />
input_tel=<input type="tel" name="%cursor%" id="%cursor%" />
input_number=<input type="number" name="%cursor%" id="%cursor%" />
input_color=<input type="color" name="%cursor%" id="%cursor%" />
input_checkbox=<input type="checkbox" name="%cursor%" id="%cursor%" />
input_c=<input type="checkbox" name="%cursor%" id="%cursor%" />
input_radio=<input type="radio" name="%cursor%" id="%cursor%" />
input_r=<input type="radio" name="%cursor%" id="%cursor%" />
input_range=<input type="range" name="%cursor%" id="%cursor%" />
input_file=<input type="file" name="%cursor%" id="%cursor%" />
input_f=<input type="file" name="%cursor%" id="%cursor%" />
input_submit=<input type="submit" value="%cursor%" />
input_s=<input type="submit" value="%cursor%" />
input_image=<input type="image" src="%cursor%" alt="%cursor%" />
input_i=<input type="image" src="%cursor%" alt="%cursor%" />
input_button=<input type="button" value="%cursor%" />
input_b=<input type="button" value="%cursor%" />
input_reset=<input type="reset" value="%cursor%" />
# <isindex>
isindex=<isindex />
# <select>
select=<select name="%cursor%" id="%cursor%">%cursor%</select>
select_disabled=<select name="%cursor%" id="%cursor%" disabled="disabled">%cursor%</select>
select_d=<select name="%cursor%" id="%cursor%" disabled="disabled">%cursor%</select>
# <option>
option=<option value="%cursor%">%cursor%</option>
opt=<option value="%cursor%">%cursor%</option>
# <textarea>
textarea=<textarea name="%cursor%" id="%cursor%" cols="30" rows="10">%cursor%</textarea>
tarea=<textarea name="%cursor%" id="%cursor%" cols="30" rows="10">%cursor%</textarea>
# <marquee>
<marquee behavior="%cursor%" direction="%cursor%">%cursor%</marquee>
# <menu>
menu_context=<menu type="context">%cursor%</menu>
menu_c=<menu type="context">%cursor%</menu>
menu_toolbar=<menu type="toolbar">%cursor%</menu>
menu_t=<menu type="toolbar">%cursor%</menu>
# <video>
video=<video src="%cursor%">%cursor%</video>
# <audio>
audio=<audio src="%cursor%">%cursor%</audio>
# <keygen>
keygen=<keygen />
kg=<keygen />
# <command>
command=<command />
cmd=<command />
# <button>
button=<button>%cursor%</button>
btn=<button>%cursor%</button>
button_submit=<button type="submit">%cursor%</button>
button_s=<button type="submit">%cursor%</button>
btn_s=<button type="submit">%cursor%</button>
button_reset=<button type="reset">%cursor%</button>
button_r=<button type="reset">%cursor%</button>
btn_r=<button type="reset">%cursor%</button>
button_disabled=<button disabled="disabled">%cursor%</button>
button_d=<button disabled="disabled">%cursor%</button>
btn_d=<button disabled="disabled">%cursor%</button>
# <fieldset>
fieldset=<fieldset>%cursor%</fieldset>
fst=<fieldset>%cursor%</fieldset>
fset=<fieldset>%cursor%</fieldset>
fieldset_disabled=<fieldset disabled="disabled">%cursor%</fieldset>
fieldset_d=<fieldset disabled="disabled">%cursor%</fieldset>
fset_d=<fieldset disabled="disabled">%cursor%</fieldset>
fst_d=<fieldset disabled="disabled">%cursor%</fieldset>
# <blockquote>
blockquote=<blockquote>%cursor%</blockquote>
bq=<blockquote>%cursor%</blockquote>
# <figure>
figure=<figure>%cursor%</figure>
fig=<figure>%cursor%</figure>
# <figcaption>
figcaption=<figcaption>%cursor%</figcaption>
figc=<figcaption>%cursor%</figcaption>
# <caption>
caption=<caption></caption>
cap=<caption></caption>
# <colgroup>
colgroup=<colgroup>\n\t<col />\n</colgroup>
colg=<colgroup>\n\t<col />\n</colgroup>
# <optgroup>
optgroup=<optgroup>\n\t<option value="%cursor%">%cursor%</option>\n</optgroup>
optg=<optgroup>\n\t<option value="%cursor%">%cursor%</option>\n</optgroup>
# <legend>
legend=<legend>%cursor%</legend>
leg=<legend>%cursor%</legend>
# <section>
section=<section>%cursor%</section>
sect=<section>%cursor%</section>
# <article>
article=<article>%cursor%</article>
art=<article>%cursor%</article>
# <header>
header=<header>%cursor%</header>
hdr=<header>%cursor%</header>
# <footer>
footer=<footer>%cursor%</footer>
ftr=<footer>%cursor%</footer>
# <address>
address=<address>%cursor%</address>
adr=<address>%cursor%</address>
# <dialog>
dialog=<dialog>%cursor%</dialog>
dlg=<dialog>%cursor%</dialog>
# <strong>
strong=<strong>%cursor%</strong>
str=<strong>%cursor%</strong>
# <progress>
progress=<progress>%cursor%</progress>
prog=<progress>%cursor%</progress>
# <main>
main=<main>%cursor%</main>
mn=<main>%cursor%</main>
# <template>
template=<template>%cursor%</template>
tem=<template>%cursor%</template>
# <datagrid>
datagrid=<datagrid>%cursor%</datagrid>
datag=<datagrid>%cursor%</datagrid>
# <datalist>
datalist=<datalist>%cursor%</datalist>
datal=<datalist>%cursor%</datalist>
# <output>
output=<output>%cursor%</output>
out=<output>%cursor%</output>
# <details>
details=<details>%cursor%</details>
det=<details>%cursor%</details>
# <ol>
ol=<ol>\n\t<li>%cursor%</li>\n</ol>
# <ul>
ul=<ul>\n\t<li>%cursor%</li>\n</ul>
# <li>
li=<li>%cursor%</li>
# <dl>
dl=<dl>\n\t<dt>%cursor%</dt>\n\t<dd>%cursor%</dd>\n</dl>
# <dt>
dt=<dt>%cursor%</dt>
# <dd>
dd=<dd>%cursor%</dd>
# <table>
table=<table>\n\t<tr>\n\t\t<td>%cursor%</td>\n\t</tr>\n</table>
# <tr>
tr=<tr>%cursor%</tr>
# <td>
td=<td>%cursor%</td>
# HTML Basic
html=<html lang="en">%cursor%</html>
body=<body>%cursor%</body>
# HTML Headings
h1=<h1>%cursor%</h1>
h2=<h2>%cursor%</h2>
h3=<h3>%cursor$</h3>
h4=<h4>%cursor%</h4>
h5=<h5>%cursor%</h5>
h6=<h6>%cursor%</h6>
# HTML Paragraphs
p=<p>%cursor%</p>
pre=<pre>%cursor%</pre>
# HTML Formatting
b=<b>%cursor%</b>
i=<i>%cursor%</i>
em=<em>%cursor%</em>
mark=<mark>%cursor%</mark>
small=<small>%cursor%</small>
del=<del>%cursor%</del>
ins=<ins>%cursor%</ins>
sub=<sub>%cursor%</sub>
sup=<sup>%cursor%</sup>
# HTML Quotations
q=<q>%cursor%</q>
cite=<cite>%cursor%</cite>
# HTML Tables
th=<th>%cursor%</th>
thead=<thead>%cursor%</thead>
tbody=<tbody>%cursor%</tbody>
tfoot=<tfoot>%cursor%</tfoot>
# HTML Block & Inline
div=<div>%cursor%</div>
span=<span>%cursor%</span>
# HTML JavaScript
noscript=<noscript>%cursor%</noscript>
# HTML Head
head=<head>%cursor%</head>
title=<title>%cursor%</title>
# HTML Layout
nav=<nav>%cursor%</nav>
aside=<aside>%cursor%</aside>
summary=<summary>%cursor%</summary>
# HTML Computer Code
kbd=<kbd>%cursor%</kbd>
samp=<samp>%cursor%</samp>
code=<code>%cursor%</code>
var=<var>%cursor%</var>
# HTML Semantics
time=<time datetime="%cursor%">%cursor%</time>
# HTML Canvas
canvas=<canvas>%cursor%</canvas>
# HTML SVG
svg=<svg>%cursor%</svg>
circle=<circle cx="%cursor%" cy="%cursor%" r="%cursor%"/>
rect=<rect width="%cursor%" height="%cursor%"/>
polygon=<polygon point="%cursor%"/>
defs=<defs>%cursor%</defs>
linearGradient=<linearGradient x1="%cursor%" y1="%cursor%" x2="%cursor%" y2="%cursor%">%cursor%</linearGradient>
stop=<stop offset="%cursor%"/>
ellipse=<ellipse cx="%cursor%" cy="%cursor%" rx="%cursor%" ry="%cursor%" fill="url(%cursor%)"/>
text=<text fill="%cursor%" font-size="%cursor%" font-family="%cursor%" x="%cursor%" y="%cursor%">%cursor%</text>
# HTML Video
track=<track src="%cursor%" kind="subtitles" srclang="%cursor%" label="%cursor%">
# JavaScript
if=if(%cursor%) {\n\t%cursor%\n}
else=else {\n\t%cursor%\n}
for=for(%cursor%) {\n\t%cursor%\n}
while=while(%cursor%) {\n\t%cursor%\n}
do=do {\n\t%cursor%\n} while(%cursor%)
switch=switch(%cursor%) {\n\tcase %cursor%:\n\t\t%cursor%\n\t\tbreak;\n\tdefault:\n\t\t%cursor%\n}
case=case %cursor%: \n\t%cursor%\n\tbreak;
try=try {\n\t%cursor%\n} catch(%cursor%) {\n\t%cursor%\n}
function=function %cursor%() {\n\t%cursor%\n}
class=class %cursor% {\n\t%cursor%\n}

[CSS]
# by fitorec <chanerec@gmail.com>
bc=background-color: %cursor%;
bct=background-color: transparent;
ba=background: %cursor% url('%cursor%') %cursor%;
ma=margin: %cursor%;
pa=padding: %cursor%;
bo=border: %cursor%;
co=color: %cursor%;
he=height: %cursor%;
wi=width: %cursor%;
di=display: %cursor%;
font=font:italic bold 12px/30px Georgia, serif;
fs=font-size: %cursor%;
ff=font-family: %cursor%;
fw=font-weight: %cursor%;
ta=text-align: %cursor%;
fl=float: %cursor%;
im=!important
po=position: %cursor%;
ov=overflow: %cursor%;
cmt=/* ######### %cursor% ######### */
import=@import url(%cursor%.css) screen, projection, tv, handheld, print;
#css3 with crossbrowser tags
gradient=background: #FF5000;\nbackground-repeat: repeat-x;\nbackground-image: -moz-linear-gradient(top, #FF5000, #C01106);\nbackground-image: -ms-linear-gradient(top, #FF5000, #C01106);\nbackground-image: -webkit-gradient(linear, left top, left bottom, from(#FF5000), to(#C01106));\nbackground-image: -webkit-linear-gradient(top, #FF5000, #C01106);\nbackground-image: -o-linear-gradient(top, #FF5000, #C01106);\nbackground-image: linear-gradient(top, #FF5000, #C01106);\nfilter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#FF5000', endColorstr='#C01106',GradientType=0 );
boxshadow=-webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);\n   -moz-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);\n    -ms-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);\n     -o-box-shadow: inset 0 1px 1px rgba(0,0,0,.05);\n        box-shadow: inset 0 1px 1px rgba(0,0,0,.05);
borderradius=-webkit-border-radius: 0 0 10px 10px;\n   -moz-border-radius: 0 0 10px 10px;\n        border-radius: 0 0 10px 10px;
##Rotaciones ejemplo de rotaciones a 45 grados
# keyframes y animaciones
animation=-webkit-animation: %cursor%nombreAnimacion 5s linear infinite;\n    -moz-animation: nombreAnimacion 5s linear infinite;\n     -ms-animation: nombreAnimacion 5s linear infinite;\n         animation: nombreAnimacion 5s linear infinite;
keyframes=@-webkit-keyframes %cursor%nombreAnimacion {\n  0%   { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@-moz-keyframes nombreAnimacion {\n  0%   { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@-o-keyframes nombreAnimacion {\n  0%   { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n@keyframes nombreAnimacion {\n  0%   { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n

[Erlang]
case=case %cursor% of\n\t%cursor% -> %cursor%\nend
if=if\n\t%cursor% -> %cursor%\nend
begin=begin\n\t%cursor%\nend
fun=fun(%cursor%) ->\n\t%cursor%\nend
try=try %cursor% of\n\t%cursor% ->\n\t%cursor%\ncatch\n\t%cursor% ->\n\t%cursor%\nend
module=-module(%cursor%).
export=-export(%cursor%).
compile=-compile(%cursor%).
include=-include(%cursor%).

[LaTeX]
# by Frank Lanitz
frame=\\begin{frame}\n%ws%\\frametitle{%cursor%}\n%ws%%cursor%\n\\end{frame}
block=\\begin{block}{%cursor%}\n%ws%%cursor%\n\\end{block}
itemize=\\begin{itemize}\n%ws%\\item %cursor%\n\\end{itemize}
enumerate=\\begin{enumerate}\n%ws%\\item %cursor%\n\\end{enumerate}
description=\\begin{description}\n%ws%\\item %cursor%\n\\end{description}
